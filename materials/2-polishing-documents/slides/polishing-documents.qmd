---
title: "Polishing Documents"
subtitle: "rstudio::conf(2022) <br> From R Markdown to Quarto"
author: "Andrew Bray"
format:
  revealjs:
    height: 900
    width: 1600
    theme: ../../slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    center-title-slide: true
    menu: false
    highlight-style: github
    progress: false
    code-overflow: wrap
---

# Generic Blocks and Inlines

## What happens when you pandoc it? {auto-animate="true"}

From the last exercise . . .

``` bash
quarto pandoc -f html -t markdown ex-2-goal.html -o ex-2-answer.md
```

. . .

::: columns
::: {.column width="60%"}
![](images/pandoc-convert-1.png)
:::

::: {.column width="40%"}
\
\

This looks familiar!
:::
:::

## What happens when you pandoc it? {auto-animate="true"}

From the last exercise . . .

``` bash
quarto pandoc -f html -t markdown ex-2-goal.html -o ex-2-answer.md
```

::: columns
::: {.column width="60%"}
![](images/pandoc-convert-2.png)

![](images/pandoc-convert-1.png)
:::

::: {.column width="40%"}
\
\

This looks familiar!

\

|             . . . but this does not.
:::
:::

## The Bracketed Span {transition="none"}

![](images/quarto-workshop-07.jpg){fig-align="center"}

## The Bracketed Span {transition="none"}

![](images/quarto-workshop-08.jpg){fig-align="center"}

## The Bracketed Span {transition="none"}

![](images/quarto-workshop-09.jpg){fig-align="center"}

## The Bracketed Span {transition="none"}

![](images/quarto-workshop-10.jpg){fig-align="center"}

## The Bracketed Span {transition="none"}

![](images/quarto-workshop-11.jpg){fig-align="center"}

## The Fenced Div

![](images/quarto-workshop-12.jpg){fig-align="center"}

# Quarto Elements

## Callout Blocks

For when you want to highlight a bit of content for the reader.

::: columns
::: {.column width="50%"}
#### Markdown

``` markdown
:::{.callout-note}
Look - a squirrel!
:::

:::{.callout-important}
Look - a squirrel!
:::

:::{.callout-tip}
Look - a squirrel!
:::
```
:::

::: {.column .fragment width="50%"}
#### HTML output

::: callout-note
Look - a squirrel!
:::

::: callout-important
Look - a squirrel!
:::

::: callout-tip
Look - a squirrel!
:::
:::
:::

## Callout Blocks

Callouts are implemented across formats.

::: columns
::: {.column width="50%"}
#### Markdown

``` markdown
:::{.callout-note}
Look - a squirrel!
:::

:::{.callout-important}
Look - a squirrel!
:::

:::{.callout-tip}
Look - a squirrel!
:::
```
:::

::: {.column width="50%"}
#### PDF output

![](images/callouts-pdf.png)
:::
:::

## Callout Blocks

Callouts are implemented across formats.

::: columns
::: {.column width="50%"}
#### Markdown

``` markdown
:::{.callout-note}
Look - a squirrel!
:::

:::{.callout-important}
Look - a squirrel!
:::

:::{.callout-tip}
Look - a squirrel!
:::
```
:::

::: {.column width="50%"}
#### DOCX output

![](images/callouts-doc.png)
:::

\
\
:::

## Element Layouts

Quarto makes available several layout *attributes* that apply to broad range of block elements.

-   `layout-ncol`: split elements across n columns (`2`, `3`, ...).
-   `layout-nrow`: split elements across n rows (`2`, `3`, ...).
-   `layout-align`: align elements (`left`, `center`, `right`, `default`).
-   `layout-valign`: align elements (`top`, `center`, `bottom`, `default`).
-   `layout`: Split elements into a 2D array by rows and columns[^1].

[^1]: For more control, see `{.grid}` which relies up the CSS Bootstrap Grid system. See the \[Guide\]{https://quarto.org/docs/output-formats/page-layout.html#article}.

## Element Layouts {auto-animate="true"}

`layout-ncol`

::: columns
::: {.column width="50%"}
#### Markdown

``` markdown
:::{layout-ncol=2}
A novelty clock, watch, and the like for 
keeping time at an animal's rate, defined
in terms of a multiple of human rate by 
dividing the average lifetime of a 
particular animal into the average 
lifetime of a human being. The multiple
for dogs is seven, for example.

![](images/dog-watch.png)
:::
```
:::

::: {.column .border width="50%"}
#### HTML output

::: {layout-ncol="2" style="border: 2px solid #5c5859"}
[A clock for keeping time at an animal's rate. The multiple for dogs is seven, for example.]{style="font-size: .5em"}

![](images/dog-watch.png)
:::
:::
:::

## Element Layouts {auto-animate="true"}

`layout-ncol` + `layout-valign`

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="1"}
:::{layout-ncol=2 layout-valign=middle}
A novelty clock, watch, and the like for 
keeping time at an animal's rate, defined
in terms of a multiple of human rate by 
dividing the average lifetime of a 
particular animal into the average 
lifetime of a human being. The multiple
for dogs is seven, for example.

![](images/dog-watch.png)
:::
```
:::

::: {.column .border width="50%"}
#### HTML output

::: {layout-ncol="2" layout-valign="center" style="border: 2px solid #5c5859"}
[A clock for keeping time at an animal's rate. The multiple for dogs is seven, for example.]{style="font-size: .5em"}

![](images/dog-watch.png)
:::
:::
:::

## Element Layouts {auto-animate="true"}

`layout-ncol` with small image

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="10"}
:::{layout-ncol=2}
A novelty clock, watch, and the like for 
keeping time at an animal's rate, defined
in terms of a multiple of human rate by 
dividing the average lifetime of a 
particular animal into the average 
lifetime of a human being. The multiple
for dogs is seven, for example.

![](images/dog-watch-small.png)
:::
```
:::

::: {.column .border width="50%"}
#### HTML output

::: {layout-ncol="2" layout-valign="center" style="border: 2px solid #5c5859"}
[A clock for keeping time at an animal's rate. The multiple for dogs is seven, for example.]{style="font-size: .5em"}

![](images/dog-watch.png){width="130px"}
:::
:::
:::

## Element Layouts {auto-animate="true"}

`layout-ncol` + `layout-align` ZZQ

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="1"}
:::{layout-ncol=2 layout-align=right}
A novelty clock, watch, and the like for 
keeping time at an animal's rate, defined
in terms of a multiple of human rate by 
dividing the average lifetime of a 
particular animal into the average 
lifetime of a human being. The multiple
for dogs is seven, for example.

![](images/dog-watch-small.png)
:::
```
:::

::: {.column .border width="50%"}
#### HTML output

::: {layout-ncol="2" layout-align="right" style="border: 2px solid #5c5859"}
[A clock for keeping time at an animal's rate. The multiple for dogs is seven, for example.]{style="font-size: .5em"}

![](images/dog-watch.png){width="130px"}
:::
:::
:::

## Element Layout Array

`layout`: The layout attribute[^2] is a 2-dimensional array where the first dimension defines rows and the second columns.

[^2]: For more control, see `{.grid}` which relies up the CSS Bootstrap Grid system. See the \[Guide\]{https://quarto.org/docs/output-formats/page-layout.html#article}.

\

-   `layout="[[1,1], [1]]"` translates to: *create two rows, the first of which has two columns of equal size and the second of which has a single column*.
-   You can scale the relative dimension of each panel by changing the `1`s.

## Element Layout Array {auto-animate="true"}

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="1"}
:::{layout="[[1,1], [1]]"}
![](images/watch-face.png)

![](images/dog-watch.png)

![](images/circuit.png)
:::
```
:::

::: {.column .border .fragment width="50%"}
#### HTML output

::: {layout="[[1,1], [1]]" style="border: 2px solid #5c5859"}
![](images/watch-face.png){style="border: 2px solid #5c5859" width="250px"}

![](images/dog-watch.png){style="border: 2px solid #5c5859" width="250px"}

![](images/circuit.png){style="border: 2px solid #5c5859" width="750px"}
:::
:::
:::

::: {.fragment style="position: absolute; top: 420px; left: 0px"}
[What would `layout="[[1,5], [1]]"` do?]{style="font-size: .8em"}
:::

## Element Layout Array {auto-animate="true"}

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="1"}
:::{layout="[[1,5], [1]]"}
![](images/watch-face.png)

![](images/dog-watch.png)

![](images/circuit.png)
:::
```
:::

::: {.column .border width="50%"}
#### HTML output

::: {layout="[[1,5], [1]]" style="border: 2px solid #5c5859"}
![](images/watch-face.png){style="border: 2px solid #5c5859" width="250px"}

![](images/dog-watch.png){style="border: 2px solid #5c5859" width="250px"}

![](images/circuit.png){style="border: 2px solid #5c5859" width="750px"}
:::
:::
:::

## Document Layout: column classes

Modify the width of the main body column for individual block elements (e.g. paragraph, figures).

. . .

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="1,11"}
:::{.column-body}
A novelty clock, watch, and the like for 
keeping time at an animal's rate, defined
in terms of a multiple of human rate by 
dividing the average lifetime of a 
particular animal into the average 
lifetime of a human being. The multiple
for dogs is seven, for example.
:::

:::{.column-screen}
A novelty clock, watch, and the like for 
keeping time at an animal's rate, defined
in terms of a multiple of human rate by 
dividing the average lifetime of a 
particular animal into the average 
lifetime of a human being. The multiple
for dogs is seven, for example.
:::
```
:::

::: {.column .fragment width="50%"}
#### HTML output

![](images/doc-layout.png){fig-align="center"}
:::
:::

## Document Layout: margin classes {auto-animate="true"}

Place any inline or block element from the body to the margin.

. . .

::: columns
::: {.column width="50%"}
#### Markdown

``` markdown
![](images/dog-watch.png)

What a brilliant idea.
```
:::

::: {.column width="50%"}
#### Output

![](images/margin-no.png){style="border: 2px solid #5c5859"}
:::
:::

## Document Layout: margin classes {auto-animate="true"}

Place any inline or block element from the body to the margin.

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="3"}
![](images/dog-watch.png)

:::{.column-margin}
What a brilliant idea.
:::
```
:::

::: {.column width="50%"}
#### Output

![](images/margin-yes.png){style="border: 2px solid #5c5859"}
:::
:::

## Figures

Set `width`, `height` and `align` of figures. Add link, caption, and alt-text.

``` markdown
![A caption](images/dog-watch.png){width=300 align=center fig-alt="Dog watching a watch."}
```

. . .

![A caption](images/dog-watch.png){width="300" align="center" fig-alt="Dog watching a watch."}

. . .

::: {style="font-size: .8em"}
-   Units default to `px`.
-   Other choices `300in`, `300%` (relative to image size), `3em` (relative to font size).
-   Entire fig can be nested inside the link syntax (`[fig](url)`) to link the image
:::

## Labels for Links

In additional to external resources, links can go to elements of the same doc through its `#id`.

. . .

::: columns
::: {.column width="50%"}
#### Markdown

``` markdown
![A caption](images/dog-watch.png){#dogwatch}

< Much more text >

A novelty clock, [watch](#dogwatch), and the
like for keeping time at an animal's rate . . .
```
:::

::: {.column .fragment width="50%"}
#### HTML output

::: {style="border: 2px solid #5c5859"}
![A caption](images/dog-watch.png){#dogwatch width="300"}

::: {style="font-size: .7em"}
\< Much more text \>

A novelty clock, [watch](#dogwatch), and the like for keeping time at an animal's rate . . .
:::
:::
:::
:::

::: {.fragment style="position: absolute; top: 590px; left: 80px; font-size: .8em"}
-   Works for many elements,\
    not just figs!
:::

## Labels for References

References can be made dynamic using `#<type>-id` and `@<type>-id`.

. . .

::: columns
::: {.column width="50%"}
#### Markdown

``` {.markdown code-line-numbers="1,5"}
![Caption](images/dog-watch.png){#fig-dogwatch}

< Much more text >

A novelty clock, watch (@fig-dogwatch), and the like for 
keeping time at an animal's rate . . .
```
:::

::: {.column .fragment width="50%"}
#### HTML output

::: {style="border: 2px solid #5c5859"}
![A caption](images/dog-watch.png){#fig-dogwatch width="300"}

::: {style="font-size: .7em"}
\< Much more text \>

A novelty clock, watch (@fig-dogwatch), and the like for keeping time at an animal's rate . . .
:::
:::
:::
:::

::: {.fragment style="position: absolute; top: 590px; left: 80px; font-size: .8em"}
-   Other `<type>` include `@tbl-`,\
    `@sec-`, `@eq-`, `@thm-`, and many\
    more for math.
:::

## Customized References

You can customize the appearance of inline references by either changing the syntax of the inline reference or by setting options.

| Type          | Syntax                | Output   |
|---------------|-----------------------|----------|
| Default       | `@fig-elephant`       | Figure 1 |
| Custom Prefix | `[Fig @fig-elephant]` | Fig 1    |
| No Prefix     | `[-@fig-elephant]`    | 1        |

# Rstudio and Quarto

##  {menu-title="Using the Visual Editor"}

::: v-center-container
[Let's play around in the RStudio Visual Editor!]{style="text-align: center"}
:::

## Easy Table Generation

Have the editor write the markdown for you!

![](images/visual-table.png){fig-alt="Screenshot of inserting a table via the Visual Editor." fig-align=center}

## Catalog of Elements

Type `/` on a new line to search the element types.

![](images/visual-elements.png){fig-alt="Screenshot of the pop-up after typing /." fig-align=center}

## Reminder of Attributes

Click `...` next to elements to see the attributes you can change.

![](images/visual-attributes.png){fig-alt="Screenshot highlighting the three dots along the right side of the editor." fig-align=center}

## YAML Intelligence

`Ctrl + space` to see all available options then tab-complete. Also works in VSCode.


![](images/yaml-intelligence.png){fig-alt="Screenshot highlighting the three dots along the right side of the editor." fig-align=center}

# {{< fa umbrella-beach >}} Exercise 3 {background-color="#00403d"}

Open `ex-3.qmd` and follow the directions to create a document that describes your favorite place to visit on vacation.

\

When you're done, please share a screenshot of your document in the GitHub Discussion thread "Exercise 3".

# HTML Themes

# Simple CSS

## Rule syntax

## Attributes

## Selectors

## Cascade

## Ex. Formatting text inline

## Ex. Making a box

# Exercise 4

Make your own css

## References and further reading {.smaller}

-   [Client Side Web Developent Ch. 5-7](https://info340.github.io/css.html): approachable and concise introduction to how CSS work.
-   [Clock for keeping time at a rate other than human time](https://patents.google.com/patent/US5023850A/en): US patent by Rodney Metts and Barry Thomas
-   https://patents.google.com/patent/US3811677A/en?q=stilts&oq=stilts
-   https://patents.google.com/patent/US6688257B2/en?q=pet+dog&oq=pet+dog
